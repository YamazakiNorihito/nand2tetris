<class>
  <keyword>class</keyword>
  <identifier name="Ball" category="class">Ball</identifier>
  <symbol>{</symbol>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier name="x" category="field" index="0" usage="declared">x</identifier>
    <symbol>,</symbol>
    <identifier name="y" category="field" index="1" usage="declared">y</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier name="lengthx" category="field" index="2" usage="declared">lengthx</identifier>
    <symbol>,</symbol>
    <identifier name="lengthy" category="field" index="3" usage="declared">lengthy</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier name="d" category="field" index="4" usage="declared">d</identifier>
    <symbol>,</symbol>
    <identifier name="straightD" category="field" index="5" usage="declared">straightD</identifier>
    <symbol>,</symbol>
    <identifier name="diagonalD" category="field" index="6" usage="declared">diagonalD</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>boolean</keyword>
    <identifier name="invert" category="field" index="7" usage="declared">invert</identifier>
    <symbol>,</symbol>
    <identifier name="positivex" category="field" index="8" usage="declared">positivex</identifier>
    <symbol>,</symbol>
    <identifier name="positivey" category="field" index="9" usage="declared">positivey</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier name="leftWall" category="field" index="10" usage="declared">leftWall</identifier>
    <symbol>,</symbol>
    <identifier name="rightWall" category="field" index="11" usage="declared">rightWall</identifier>
    <symbol>,</symbol>
    <identifier name="topWall" category="field" index="12" usage="declared">topWall</identifier>
    <symbol>,</symbol>
    <identifier name="bottomWall" category="field" index="13" usage="declared">bottomWall</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier name="wall" category="field" index="14" usage="declared">wall</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <subroutineDec>
    <keyword>constructor</keyword>
    <identifier>Ball</identifier>
    <identifier name="new" category="subroutine">new</identifier>
    <symbol>(</symbol>
    <parameterList>
      <keyword>int</keyword>
      <identifier name="Ax" category="arg" index="0" usage="declared">Ax</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier name="Ay" category="arg" index="1" usage="declared">Ay</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier name="AleftWall" category="arg" index="2" usage="declared">AleftWall</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier name="ArightWall" category="arg" index="3" usage="declared">ArightWall</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier name="AtopWall" category="arg" index="4" usage="declared">AtopWall</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier name="AbottomWall" category="arg" index="5" usage="declared">AbottomWall</identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="x" category="field" index="0" usage="used">x</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="Ax" category="arg" index="0" usage="used">Ax</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="y" category="field" index="1" usage="used">y</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="Ay" category="arg" index="1" usage="used">Ay</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="leftWall" category="field" index="10" usage="used">leftWall</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="AleftWall" category="arg" index="2" usage="used">AleftWall</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="rightWall" category="field" index="11" usage="used">rightWall</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="ArightWall" category="arg" index="3" usage="used">ArightWall</identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <integerConstant>6</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="topWall" category="field" index="12" usage="used">topWall</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="AtopWall" category="arg" index="4" usage="used">AtopWall</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="bottomWall" category="field" index="13" usage="used">bottomWall</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="AbottomWall" category="arg" index="5" usage="used">AbottomWall</identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <integerConstant>6</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <integerConstant>0</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier>show</identifier>
          <symbol>(</symbol>
          <expressionList></expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <keyword>this</keyword>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier name="dispose" category="subroutine">dispose</identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier>Memory</identifier>
          <symbol>.</symbol>
          <identifier>deAlloc</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <keyword>this</keyword>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier name="show" category="subroutine">show</identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier>Screen</identifier>
          <symbol>.</symbol>
          <identifier>setColor</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <keyword>true</keyword>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier>draw</identifier>
          <symbol>(</symbol>
          <expressionList></expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier name="hide" category="subroutine">hide</identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier>Screen</identifier>
          <symbol>.</symbol>
          <identifier>setColor</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <keyword>false</keyword>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier>draw</identifier>
          <symbol>(</symbol>
          <expressionList></expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier name="draw" category="subroutine">draw</identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier>Screen</identifier>
          <symbol>.</symbol>
          <identifier>drawRectangle</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <identifier name="x" category="field" index="0" usage="used">x</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier name="y" category="field" index="1" usage="used">y</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier name="x" category="field" index="0" usage="used">x</identifier>
              </term>
              <symbol>+</symbol>
              <term>
                <integerConstant>5</integerConstant>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier name="y" category="field" index="1" usage="used">y</identifier>
              </term>
              <symbol>+</symbol>
              <term>
                <integerConstant>5</integerConstant>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>int</keyword>
    <identifier name="getLeft" category="subroutine">getLeft</identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <identifier name="x" category="field" index="0" usage="used">x</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>int</keyword>
    <identifier name="getRight" category="subroutine">getRight</identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <identifier name="x" category="field" index="0" usage="used">x</identifier>
            </term>
            <symbol>+</symbol>
            <term>
              <integerConstant>5</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier name="setDestination" category="subroutine">setDestination</identifier>
    <symbol>(</symbol>
    <parameterList>
      <keyword>int</keyword>
      <identifier name="destx" category="arg" index="1" usage="declared">destx</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier name="desty" category="arg" index="2" usage="declared">desty</identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <varDec>
        <keyword>var</keyword>
        <keyword>int</keyword>
        <identifier name="dx" category="var" index="0" usage="declared">dx</identifier>
        <symbol>,</symbol>
        <identifier name="dy" category="var" index="1" usage="declared">dy</identifier>
        <symbol>,</symbol>
        <identifier name="temp" category="var" index="2" usage="declared">temp</identifier>
        <symbol>;</symbol>
      </varDec>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="lengthx" category="field" index="2" usage="used">lengthx</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="destx" category="arg" index="1" usage="used">destx</identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <identifier name="x" category="field" index="0" usage="used">x</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="lengthy" category="field" index="3" usage="used">lengthy</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="desty" category="arg" index="2" usage="used">desty</identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <identifier name="y" category="field" index="1" usage="used">y</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="dx" category="var" index="0" usage="used">dx</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>Math</identifier>
              <symbol>.</symbol>
              <identifier>abs</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier name="lengthx" category="field" index="2" usage="used">lengthx</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="dy" category="var" index="1" usage="used">dy</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>Math</identifier>
              <symbol>.</symbol>
              <identifier>abs</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier name="lengthy" category="field" index="3" usage="used">lengthy</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="invert" category="field" index="7" usage="used">invert</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier name="dx" category="var" index="0" usage="used">dx</identifier>
                </term>
                <symbol>&lt;</symbol>
                <term>
                  <identifier name="dy" category="var" index="1" usage="used">dy</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier name="invert" category="field" index="7" usage="used">invert</identifier>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="temp" category="var" index="2" usage="used">temp</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="dx" category="var" index="0" usage="used">dx</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="dx" category="var" index="0" usage="used">dx</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="dy" category="var" index="1" usage="used">dy</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="dy" category="var" index="1" usage="used">dy</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="temp" category="var" index="2" usage="used">temp</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="positivex" category="field" index="8" usage="used">positivex</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="y" category="field" index="1" usage="used">y</identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier name="desty" category="arg" index="2" usage="used">desty</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="positivey" category="field" index="9" usage="used">positivey</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="x" category="field" index="0" usage="used">x</identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier name="destx" category="arg" index="1" usage="used">destx</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="positivex" category="field" index="8" usage="used">positivex</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="x" category="field" index="0" usage="used">x</identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier name="destx" category="arg" index="1" usage="used">destx</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="positivey" category="field" index="9" usage="used">positivey</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="y" category="field" index="1" usage="used">y</identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier name="desty" category="arg" index="2" usage="used">desty</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="d" category="field" index="4" usage="used">d</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
                <symbol>*</symbol>
                <term>
                  <identifier name="dy" category="var" index="1" usage="used">dy</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
            <symbol>-</symbol>
            <term>
              <identifier name="dx" category="var" index="0" usage="used">dx</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="straightD" category="field" index="5" usage="used">straightD</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <integerConstant>2</integerConstant>
            </term>
            <symbol>*</symbol>
            <term>
              <identifier name="dy" category="var" index="1" usage="used">dy</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="diagonalD" category="field" index="6" usage="used">diagonalD</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <integerConstant>2</integerConstant>
            </term>
            <symbol>*</symbol>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier name="dy" category="var" index="1" usage="used">dy</identifier>
                </term>
                <symbol>-</symbol>
                <term>
                  <identifier name="dx" category="var" index="0" usage="used">dx</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>int</keyword>
    <identifier name="move" category="subroutine">move</identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier>hide</identifier>
          <symbol>(</symbol>
          <expressionList></expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier name="d" category="field" index="4" usage="used">d</identifier>
            </term>
            <symbol>&lt;</symbol>
            <term>
              <integerConstant>0</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="d" category="field" index="4" usage="used">d</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="d" category="field" index="4" usage="used">d</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <identifier name="straightD" category="field" index="5" usage="used">straightD</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="d" category="field" index="4" usage="used">d</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="d" category="field" index="4" usage="used">d</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <identifier name="diagonalD" category="field" index="6" usage="used">diagonalD</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier name="positivey" category="field" index="9" usage="used">positivey</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <ifStatement>
                  <keyword>if</keyword>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="invert" category="field" index="7" usage="used">invert</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="x" category="field" index="0" usage="used">x</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier name="x" category="field" index="0" usage="used">x</identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                  <keyword>else</keyword>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="y" category="field" index="1" usage="used">y</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier name="y" category="field" index="1" usage="used">y</identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                </ifStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <ifStatement>
                  <keyword>if</keyword>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="invert" category="field" index="7" usage="used">invert</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="x" category="field" index="0" usage="used">x</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier name="x" category="field" index="0" usage="used">x</identifier>
                        </term>
                        <symbol>-</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                  <keyword>else</keyword>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="y" category="field" index="1" usage="used">y</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier name="y" category="field" index="1" usage="used">y</identifier>
                        </term>
                        <symbol>-</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                </ifStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier name="positivex" category="field" index="8" usage="used">positivex</identifier>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier name="invert" category="field" index="7" usage="used">invert</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="y" category="field" index="1" usage="used">y</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier name="y" category="field" index="1" usage="used">y</identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="x" category="field" index="0" usage="used">x</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier name="x" category="field" index="0" usage="used">x</identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier name="invert" category="field" index="7" usage="used">invert</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="y" category="field" index="1" usage="used">y</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier name="y" category="field" index="1" usage="used">y</identifier>
                    </term>
                    <symbol>-</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="x" category="field" index="0" usage="used">x</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier name="x" category="field" index="0" usage="used">x</identifier>
                    </term>
                    <symbol>-</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier name="x" category="field" index="0" usage="used">x</identifier>
                  </term>
                  <symbol>&gt;</symbol>
                  <term>
                    <identifier name="leftWall" category="field" index="10" usage="used">leftWall</identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>1</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="x" category="field" index="0" usage="used">x</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="leftWall" category="field" index="10" usage="used">leftWall</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier name="x" category="field" index="0" usage="used">x</identifier>
                  </term>
                  <symbol>&lt;</symbol>
                  <term>
                    <identifier name="rightWall" category="field" index="11" usage="used">rightWall</identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="x" category="field" index="0" usage="used">x</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="rightWall" category="field" index="11" usage="used">rightWall</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier name="y" category="field" index="1" usage="used">y</identifier>
                  </term>
                  <symbol>&gt;</symbol>
                  <term>
                    <identifier name="topWall" category="field" index="12" usage="used">topWall</identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>3</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="y" category="field" index="1" usage="used">y</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="topWall" category="field" index="12" usage="used">topWall</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier name="y" category="field" index="1" usage="used">y</identifier>
                  </term>
                  <symbol>&lt;</symbol>
                  <term>
                    <identifier name="bottomWall" category="field" index="13" usage="used">bottomWall</identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>4</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="y" category="field" index="1" usage="used">y</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="bottomWall" category="field" index="13" usage="used">bottomWall</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier>show</identifier>
          <symbol>(</symbol>
          <expressionList></expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier name="bounce" category="subroutine">bounce</identifier>
    <symbol>(</symbol>
    <parameterList>
      <keyword>int</keyword>
      <identifier name="bouncingDirection" category="arg" index="1" usage="declared">bouncingDirection</identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <varDec>
        <keyword>var</keyword>
        <keyword>int</keyword>
        <identifier name="newx" category="var" index="0" usage="declared">newx</identifier>
        <symbol>,</symbol>
        <identifier name="newy" category="var" index="1" usage="declared">newy</identifier>
        <symbol>,</symbol>
        <identifier name="divLengthx" category="var" index="2" usage="declared">divLengthx</identifier>
        <symbol>,</symbol>
        <identifier name="divLengthy" category="var" index="3" usage="declared">divLengthy</identifier>
        <symbol>,</symbol>
        <identifier name="factor" category="var" index="4" usage="declared">factor</identifier>
        <symbol>;</symbol>
      </varDec>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="divLengthx" category="var" index="2" usage="used">divLengthx</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="lengthx" category="field" index="2" usage="used">lengthx</identifier>
            </term>
            <symbol>/</symbol>
            <term>
              <integerConstant>10</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier name="divLengthy" category="var" index="3" usage="used">divLengthy</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier name="lengthy" category="field" index="3" usage="used">lengthy</identifier>
            </term>
            <symbol>/</symbol>
            <term>
              <integerConstant>10</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier name="bouncingDirection" category="arg" index="1" usage="used">bouncingDirection</identifier>
            </term>
            <symbol>=</symbol>
            <term>
              <integerConstant>0</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="factor" category="var" index="4" usage="used">factor</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>10</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <symbol>~</symbol>
                          <term>
                            <symbol>(</symbol>
                            <expression>
                              <term>
                                <identifier name="lengthx" category="field" index="2" usage="used">lengthx</identifier>
                              </term>
                              <symbol>&lt;</symbol>
                              <term>
                                <integerConstant>0</integerConstant>
                              </term>
                            </expression>
                            <symbol>)</symbol>
                          </term>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                    <symbol>&amp;</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier name="bouncingDirection" category="arg" index="1" usage="used">bouncingDirection</identifier>
                        </term>
                        <symbol>=</symbol>
                        <term>
                          <integerConstant>1</integerConstant>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
                <symbol>|</symbol>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier name="lengthx" category="field" index="2" usage="used">lengthx</identifier>
                        </term>
                        <symbol>&lt;</symbol>
                        <term>
                          <integerConstant>0</integerConstant>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                    <symbol>&amp;</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier name="bouncingDirection" category="arg" index="1" usage="used">bouncingDirection</identifier>
                        </term>
                        <symbol>=</symbol>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <symbol>-</symbol>
                              <term>
                                <integerConstant>1</integerConstant>
                              </term>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="factor" category="var" index="4" usage="used">factor</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <integerConstant>20</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="factor" category="var" index="4" usage="used">factor</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <integerConstant>5</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
            </term>
            <symbol>=</symbol>
            <term>
              <integerConstant>1</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>506</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="divLengthy" category="var" index="3" usage="used">divLengthy</identifier>
                    </term>
                    <symbol>*</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <symbol>-</symbol>
                          <term>
                            <integerConstant>50</integerConstant>
                          </term>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
                <symbol>/</symbol>
                <term>
                  <identifier name="divLengthx" category="var" index="2" usage="used">divLengthx</identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier name="y" category="field" index="1" usage="used">y</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
                    </term>
                    <symbol>*</symbol>
                    <term>
                      <identifier name="factor" category="var" index="4" usage="used">factor</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
                </term>
                <symbol>=</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <integerConstant>0</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier name="divLengthy" category="var" index="3" usage="used">divLengthy</identifier>
                        </term>
                        <symbol>*</symbol>
                        <term>
                          <integerConstant>50</integerConstant>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                    <symbol>/</symbol>
                    <term>
                      <identifier name="divLengthx" category="var" index="2" usage="used">divLengthx</identifier>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier name="y" category="field" index="1" usage="used">y</identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
                        </term>
                        <symbol>*</symbol>
                        <term>
                          <identifier name="factor" category="var" index="4" usage="used">factor</identifier>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <ifStatement>
                  <keyword>if</keyword>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier name="wall" category="field" index="14" usage="used">wall</identifier>
                    </term>
                    <symbol>=</symbol>
                    <term>
                      <integerConstant>3</integerConstant>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <integerConstant>250</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier name="divLengthx" category="var" index="2" usage="used">divLengthx</identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <symbol>(</symbol>
                              <expression>
                                <term>
                                  <symbol>-</symbol>
                                  <term>
                                    <integerConstant>25</integerConstant>
                                  </term>
                                </term>
                              </expression>
                              <symbol>)</symbol>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                        <symbol>/</symbol>
                        <term>
                          <identifier name="divLengthy" category="var" index="3" usage="used">divLengthy</identifier>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier name="x" category="field" index="0" usage="used">x</identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <identifier name="factor" category="var" index="4" usage="used">factor</identifier>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                  <keyword>else</keyword>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <integerConstant>0</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier name="divLengthx" category="var" index="2" usage="used">divLengthx</identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <integerConstant>25</integerConstant>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                        <symbol>/</symbol>
                        <term>
                          <identifier name="divLengthy" category="var" index="3" usage="used">divLengthy</identifier>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier name="x" category="field" index="0" usage="used">x</identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <identifier name="factor" category="var" index="4" usage="used">factor</identifier>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                </ifStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier>setDestination</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <identifier name="newx" category="var" index="0" usage="used">newx</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier name="newy" category="var" index="1" usage="used">newy</identifier>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol>}</symbol>
</class>